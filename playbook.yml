- hosts: localhost
  become: no
  gather_facts: no
  vars_files:
    - "vars/main.yml"
    - [ "vars/main.local.yml" ]
  tasks:
    - name: Ensure directories exists
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ local_prefix}}/{{ dnsmasq_china_list_name }}"

    - name: Download v2ray
      include_role:
        name: v2ray-client
      vars:
        v2ray_dir: "{{ item }}"
        v2ray_local_update: "{{ local_update }}"
      when: (program == 'v2ray') and ((not item is directory) or (local_update == 'yes'))
      loop:
        - "{{ local_prefix}}/{{ v2ray_name }}"

    - name: Download dnsmasq-china-list
      git:
        repo: https://github.com/felixonmars/dnsmasq-china-list.git
        dest: "{{ local_prefix}}/{{ dnsmasq_china_list_original_name }}"
        clone: yes
        update: "{{ local_update }}"
      when: not dnsmasq_china_list_original_name is directory

    - name: Fix dnsmasq-china-list
      shell: |
        SERVERS=( {{ '"' + china_dns_servers|join('" "') + '"' }} )
        CONF_WITH_SERVERS=(accelerated-domains.china apple.china)
        # CONF_WITH_SERVERS=(accelerated-domains.china google.china apple.china)
        CONF_SIMPLE=(bogus-nxdomain.china)
        for _conf in "${CONF_SIMPLE[@]}"; do
            cp "{{ local_prefix}}/{{ dnsmasq_china_list_original_name }}/$_conf.conf" "{{ local_prefix}}/{{ dnsmasq_china_list_name }}/$_conf.conf"
        done
        for _server in "${SERVERS[@]}"; do
            for _conf in "${CONF_WITH_SERVERS[@]}"; do
                cp "{{ local_prefix}}/{{ dnsmasq_china_list_original_name }}/$_conf.conf" "{{ local_prefix}}/{{ dnsmasq_china_list_name }}/$_conf.$_server.conf"
            done
            sed -i "s|^\(server.*\)/[^/]*$|\1/$_server|" "{{ local_prefix}}/{{ dnsmasq_china_list_name }}"/*."$_server".conf
        done

    - name: Download files
      get_url:
        dest: "{{ item.path }}"
        url: "{{ item.url }}"
        mode: 0755
        force: yes
      when: (not item.path is file) or (local_update == 'yes')
      loop:
        - path: "{{ local_prefix}}/{{ ss_nat_name }}"
          url: https://raw.githubusercontent.com/shadowsocks/shadowsocks-libev/master/src/ss-nat
        - path: "{{ local_prefix}}/{{ china_ip_list_name }}"
          url: https://raw.githubusercontent.com/LisonFan/china_ip_list/master/china_ipv4_list

    - name: Render files
      template:
        src: "{{ item }}.j2"
        dest: "{{ local_prefix }}/{{ item }}"
      loop:
        - "{{ doh_servers_name }}"
        - "{{ directly_connecting_domains_name }}"

- hosts: "{{ host }}"
  remote_user: "{{ user | default('ubuntu') }}"
  become: "{{ become | default('yes') }}"
  gather_facts: "{{ gather_facts | default('yes') }}"
  vars_files:
    - "vars/main.yml"
    - [ "vars/main.local.yml" ]
  roles:
    - role: "{{ role }}"
